apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: logwrites.capabilities.elastisys.com
spec:
  compositeTypeRef:
    apiVersion: capabilities.elastisys.com/v1alpha1
    kind: LogWrite
  mode: Pipeline
  pipeline:
    - step: local-discovery
      functionRef:
        name: function-extra-resources
      input:
        apiVersion: extra-resources.fn.crossplane.io/v1beta1
        kind: Input
        spec:
          extraResources:
            - apiVersion: v1
              kind: Secret
              into: receivers
              type: Selector
              selector:
                maxMatch: 2
                minMatch: 0
                matchLabels:
                  - key: logwrites.capabilities.elastisys.com
                    type: Value
                    value: ""
    - step: remote-discovery
      functionRef:
        name: function-go-templating
      input:
        apiVersion: gotemplating.fn.crossplane.io/v1beta1
        kind: GoTemplate
        source: Inline
        inline:
          template: |
            {{- range $_, $cluster := .observed.composite.resource.spec.clusters }}
            ---
            apiVersion: kubernetes.crossplane.io/v1alpha2
            kind: Object
            metadata:
              name: remote-environment-config-receivers-{{ $cluster }}
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: remote-environment-config-receivers-{{ $cluster }}
                gotemplating.fn.crossplane.io/ready: "True"
            spec:
              providerConfigRef:
                name: kubernetes-{{ $cluster }}
              managementPolicies: [Observe]
              watch: true
              forProvider:
                manifest:
                  apiVersion: apiextensions.crossplane.io/v1beta1
                  kind: EnvironmentConfig
                  metadata:
                    name: receivers.logwrites.capabilities.elastisys.com
            {{- end }}
    - step: local-environment-config-receivers
      functionRef:
        name: function-go-templating
      input:
        apiVersion: gotemplating.fn.crossplane.io/v1beta1
        kind: GoTemplate
        source: Inline
        inline:
          template: |
            {{- $localReceivers := index (index .context "apiextensions.crossplane.io/extra-resources") "receivers" }}
            apiVersion: apiextensions.crossplane.io/v1beta1
            kind: EnvironmentConfig
            metadata:
              name: receivers.logwrites.capabilities.elastisys.com
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: environment-config-receivers
                gotemplating.fn.crossplane.io/ready: "True"
            data:
              local:
                {{- range $_, $r := $localReceivers }}
                - name: {{ $r.metadata.name }}
                  namespace: {{ $r.metadata.namespace }}
                {{- end }}
              remote:
                {{- if hasKey .observed "resources" }}
                {{- range $_, $cluster := .observed.composite.resource.spec.clusters }}
                {{- with index $.observed.resources (print "remote-environment-config-receivers-" $cluster) }}
                {{- with .resource.status.atProvider.manifest }}
                {{ $cluster }}:
                  {{ toYaml .data.local | nindent 4 }}
                {{- end }}
                {{- end }}
                {{- end }}
                {{- end }}

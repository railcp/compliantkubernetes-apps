apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: logwrites.capabilities.elastisys.com
spec:
  compositeTypeRef:
    apiVersion: capabilities.elastisys.com/v1alpha1
    kind: LogWrite
  mode: Pipeline
  pipeline:
    - step: pull-extra-resources
      functionRef:
        name: function-extra-resources
      input:
        apiVersion: extra-resources.fn.crossplane.io/v1beta1
        kind: Input
        spec:
          extraResources:
            - apiVersion: v1
              kind: Secret
              into: Receivers
              type: Selector
              selector:
                maxMatch: 2
                minMatch: 1
                matchLabels:
                  - key: logwrites.capabilities.elastisys.com
                    type: Value
                    value: ""
    - step: go-templating
      functionRef:
        name: function-go-templating
      input:
        apiVersion: gotemplating.fn.crossplane.io/v1beta1
        kind: GoTemplate
        source: Inline
        inline:
          template: |
            {{- $Receivers := index (index .context "apiextensions.crossplane.io/extra-resources") "Receivers" }}
            apiVersion: apiextensions.crossplane.io/v1beta1
            kind: EnvironmentConfig
            metadata:
              name: receivers.logwrites.capabilities.elastisys.com
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: environment-config-receivers
                gotemplating.fn.crossplane.io/ready: "True"
            data:
              refs:
                {{- range $_, $r := $Receivers }}
                - name: {{ $r.metadata.name }}
                  namespace: {{ $r.metadata.namespace }}
                {{- end }}
